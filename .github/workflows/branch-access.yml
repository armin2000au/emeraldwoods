name: Restrict Push Access

on:
  push:
    branches:
      - '*'

jobs:
  check-branch-owner:
    runs-on: ubuntu-latest
    name: Check Branch Owner
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get original branch creator
        id: get_creator
        run: |
          # Extract branch name
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Branch Name: $BRANCH_NAME"

          # Get the commit SHA of the first commit on the branch
          FIRST_COMMIT_SHA=$(git rev-list --max-parents=0 HEAD)
          echo "First Commit SHA: $FIRST_COMMIT_SHA"

          # Get the author information of the first commit
          AUTHOR_INFO=$(git show -s --format='%ae %an' "$FIRST_COMMIT_SHA")
          BRANCH_CREATOR_EMAIL=$(echo "$AUTHOR_INFO" | awk '{print $1}')
          
          # Use GitHub API to get the username from email
          BRANCH_CREATOR=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/search/users?q=${BRANCH_CREATOR_EMAIL}" | \
            jq -r '.items[0].login // empty')

          echo "Branch Creator GitHub Username: $BRANCH_CREATOR"

          # Set output for later steps
          echo "branch_creator=$BRANCH_CREATOR" >> $GITHUB_ENV

      - name: Check if user is branch owner
        run: |
          OWNER="${GITHUB_ACTOR}"
          BRANCH_CREATOR="${{ env.branch_creator }}"

          echo "Current Actor: $OWNER"
          echo "Branch Creator: $BRANCH_CREATOR"

          # Check if the branch creator is the same as the current actor
          if [[ "$BRANCH_CREATOR" != "$OWNER" ]]; then
            echo "You do not have permission to push to this branch."
            exit 1
          else
            echo "Permission granted to push to this branch."
          fi
